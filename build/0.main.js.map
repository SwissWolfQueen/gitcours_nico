{"version":3,"sources":["../../src/pages/items/items.module.ts","../../node_modules/@ionic-native/local-notifications/index.js","../../src/providers/notifications-service/notif-mock.ts","../../src/pages/items/items.ts","../../src/pipes/dateformat-pipe.ts","../../src/pipes/deadline-pipe.ts","../../src/pipes/sortdesc-pipe.ts"],"names":[],"mappings":"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","file":"0.main.js","sourcesContent":["/**\n * @Author: Nicolas Fazio <webmaster-fazio>\n * @Date:   08-04-2017\n * @Email:  contact@nicolasfazio.ch\n * @Last modified by:   webmaster-fazio\n * @Last modified time: 08-04-2017\n */\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { Items } from './items';\nimport { DeadlinePipe } from \"../../pipes/deadline-pipe\";\nimport { SortDescPipe } from \"../../pipes/sortdesc-pipe\";\nimport { DateFormatPipe } from \"../../pipes/dateformat-pipe\";\n\nimport { NotifMock } from \"../../providers/notifications-service/notif-mock\";\nimport { LocalNotifications } from '@ionic-native/local-notifications';\n\n@NgModule({\n  declarations: [\n    Items,\n    DeadlinePipe,\n    SortDescPipe,\n    DateFormatPipe\n  ],\n  imports: [\n    IonicPageModule.forChild(Items)\n  ],\n  providers: [\n    NotifMock,\n    LocalNotifications\n  ],\n  exports: [\n    Items\n  ]\n})\nexport class ItemsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/items/items.module.ts","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nimport { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin } from '@ionic-native/core';\r\n/**\r\n * @name Local Notifications\r\n * @description\r\n * This plugin allows you to display local notifications on the device\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { LocalNotifications } from '@ionic-native/local-notifications';\r\n *\r\n *\r\n * constructor(private localNotifications: LocalNotifications) { }\r\n *\r\n * ...\r\n *\r\n *\r\n * // Schedule a single notification\r\n * this.localNotifications.schedule({\r\n *   id: 1,\r\n *   text: 'Single ILocalNotification',\r\n *   sound: isAndroid? 'file://sound.mp3': 'file://beep.caf',\r\n *   data: { secret: key }\r\n * });\r\n *\r\n *\r\n * // Schedule multiple notifications\r\n * this.localNotifications.schedule([{\r\n *    id: 1,\r\n *    text: 'Multi ILocalNotification 1',\r\n *    sound: isAndroid ? 'file://sound.mp3': 'file://beep.caf',\r\n *    data: { secret:key }\r\n *   },{\r\n *    id: 2,\r\n *    title: 'Local ILocalNotification Example',\r\n *    text: 'Multi ILocalNotification 2',\r\n *    icon: 'http://example.com/icon.png'\r\n * }]);\r\n *\r\n *\r\n * // Schedule delayed notification\r\n * this.localNotifications.schedule({\r\n *    text: 'Delayed ILocalNotification',\r\n *    at: new Date(new Date().getTime() + 3600),\r\n *    led: 'FF0000',\r\n *    sound: null\r\n * });\r\n * ```\r\n * @interfaces\r\n * ILocalNotification\r\n */\r\nexport var LocalNotifications = (function () {\r\n    function LocalNotifications() {\r\n    }\r\n    /**\r\n     * Schedules a single or multiple notifications\r\n     * @param options {Notification | Array<ILocalNotification>} optional\r\n     */\r\n    LocalNotifications.prototype.schedule = function (options) { };\r\n    /**\r\n     * Updates a previously scheduled notification. Must include the id in the options parameter.\r\n     * @param options {ILocalNotification} optional\r\n     */\r\n    LocalNotifications.prototype.update = function (options) { };\r\n    /**\r\n     * Clears single or multiple notifications\r\n     * @param notificationId {any} A single notification id, or an array of notification ids.\r\n     * @returns {Promise<any>} Returns a promise when the notification had been cleared\r\n     */\r\n    LocalNotifications.prototype.clear = function (notificationId) { return; };\r\n    /**\r\n     * Clears all notifications\r\n     * @returns {Promise<any>} Returns a promise when all notifications have cleared\r\n     */\r\n    LocalNotifications.prototype.clearAll = function () { return; };\r\n    /**\r\n     * Cancels single or multiple notifications\r\n     * @param notificationId {any} A single notification id, or an array of notification ids.\r\n     * @returns {Promise<any>} Returns a promise when the notification is canceled\r\n     */\r\n    LocalNotifications.prototype.cancel = function (notificationId) { return; };\r\n    /**\r\n     * Cancels all notifications\r\n     * @returns {Promise<any>} Returns a promise when all notifications are canceled\r\n     */\r\n    LocalNotifications.prototype.cancelAll = function () { return; };\r\n    /**\r\n     * Checks presence of a notification\r\n     * @param notificationId {number}\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    LocalNotifications.prototype.isPresent = function (notificationId) { return; };\r\n    /**\r\n     * Checks is a notification is scheduled\r\n     * @param notificationId {number}\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    LocalNotifications.prototype.isScheduled = function (notificationId) { return; };\r\n    /**\r\n     * Checks if a notification is triggered\r\n     * @param notificationId {number}\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    LocalNotifications.prototype.isTriggered = function (notificationId) { return; };\r\n    /**\r\n     * Get all the notification ids\r\n     * @returns {Promise<Array<number>>}\r\n     */\r\n    LocalNotifications.prototype.getAllIds = function () { return; };\r\n    /**\r\n     * Get the ids of triggered notifications\r\n     * @returns {Promise<Array<number>>}\r\n     */\r\n    LocalNotifications.prototype.getTriggeredIds = function () { return; };\r\n    /**\r\n     * Get the ids of scheduled notifications\r\n     * @returns {Promise<Array<number>>} Returns a promise\r\n     */\r\n    LocalNotifications.prototype.getScheduledIds = function () { return; };\r\n    /**\r\n     * Get a notification object\r\n     * @param notificationId {any} The id of the notification to get\r\n     * @returns {Promise<ILocalNotification>}\r\n     */\r\n    LocalNotifications.prototype.get = function (notificationId) { return; };\r\n    /**\r\n     * Get a scheduled notification object\r\n     * @param notificationId {any} The id of the notification to get\r\n     * @returns {Promise<ILocalNotification>}\r\n     */\r\n    LocalNotifications.prototype.getScheduled = function (notificationId) { return; };\r\n    /**\r\n     * Get a triggered notification object\r\n     * @param notificationId The id of the notification to get\r\n     * @returns {Promise<ILocalNotification>}\r\n     */\r\n    LocalNotifications.prototype.getTriggered = function (notificationId) { return; };\r\n    /**\r\n     * Get all notification objects\r\n     * @returns {Promise<Array<ILocalNotification>>}\r\n     */\r\n    LocalNotifications.prototype.getAll = function () { return; };\r\n    /**\r\n     * Get all scheduled notification objects\r\n     * @returns {Promise<Array<ILocalNotification>>}\r\n     */\r\n    LocalNotifications.prototype.getAllScheduled = function () { return; };\r\n    /**\r\n     * Get all triggered notification objects\r\n     * @returns {Promise<Array<ILocalNotification>>}\r\n     */\r\n    LocalNotifications.prototype.getAllTriggered = function () { return; };\r\n    /**\r\n     * Register permission to show notifications if not already granted.\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    LocalNotifications.prototype.registerPermission = function () { return; };\r\n    /**\r\n     * Informs if the app has the permission to show notifications.\r\n     * @returns {Promise<boolean>}\r\n     */\r\n    LocalNotifications.prototype.hasPermission = function () { return; };\r\n    /**\r\n     * Sets a callback for a specific event\r\n     * @param eventName The name of the event. Available events: schedule, trigger, click, update, clear, clearall, cancel, cancelall\r\n     * @param callback Call back function. All events return notification and state parameter. clear and clearall return state parameter only.\r\n     */\r\n    LocalNotifications.prototype.on = function (eventName, callback) { };\r\n    LocalNotifications.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    LocalNotifications.ctorParameters = function () { return []; };\r\n    __decorate([\r\n        Cordova({\r\n            sync: true\r\n        }), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Object]), \r\n        __metadata('design:returntype', void 0)\r\n    ], LocalNotifications.prototype, \"schedule\", null);\r\n    __decorate([\r\n        Cordova({\r\n            sync: true\r\n        }), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Object]), \r\n        __metadata('design:returntype', void 0)\r\n    ], LocalNotifications.prototype, \"update\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Object]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"clear\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 0,\r\n            errorIndex: 2\r\n        }), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"clearAll\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Object]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"cancel\", null);\r\n    __decorate([\r\n        Cordova({\r\n            successIndex: 0,\r\n            errorIndex: 2\r\n        }), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"cancelAll\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Number]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"isPresent\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Number]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"isScheduled\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Number]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"isTriggered\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getAllIds\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getTriggeredIds\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getScheduledIds\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Object]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"get\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Object]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getScheduled\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [Object]), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getTriggered\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getAll\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getAllScheduled\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"getAllTriggered\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"registerPermission\", null);\r\n    __decorate([\r\n        Cordova(), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', []), \r\n        __metadata('design:returntype', Promise)\r\n    ], LocalNotifications.prototype, \"hasPermission\", null);\r\n    __decorate([\r\n        Cordova({\r\n            sync: true\r\n        }), \r\n        __metadata('design:type', Function), \r\n        __metadata('design:paramtypes', [String, Object]), \r\n        __metadata('design:returntype', void 0)\r\n    ], LocalNotifications.prototype, \"on\", null);\r\n    LocalNotifications = __decorate([\r\n        Plugin({\r\n            pluginName: 'LocalNotifications',\r\n            plugin: 'de.appplant.cordova.plugin.local-notification',\r\n            pluginRef: 'cordova.plugins.notification.local',\r\n            repo: 'https://github.com/katzer/cordova-plugin-local-notifications',\r\n            platforms: ['Android', 'iOS', 'Windows']\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], LocalNotifications);\r\n    return LocalNotifications;\r\n}());\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/local-notifications/index.js\n// module id = 614\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { LocalNotifications } from '@ionic-native/local-notifications';\nimport { INotifItem } from \"../../providers/notifications-service/notif-model\";\nimport { Platform } from 'ionic-angular';\n\n@Injectable()\nexport class NotifMock  {\n\n  constructor(\n    public platform:Platform,\n    public localNotifications: LocalNotifications\n  ){\n  }\n  schedule(notif:INotifItem):void {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      //console.log('platform-> ',this.platform.is('core'))\n      if (this.platform.is('core')) {\n        alert(`Expired: ${notif.text}`)\n      }\n      else {\n        this.localNotifications.schedule(notif)\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/notifications-service/notif-mock.ts","/**\n * @Author: Nicolas Fazio <webmaster-fazio>\n * @Date:   08-04-2017\n * @Email:  contact@nicolasfazio.ch\n * @Last modified by:   webmaster-fazio\n * @Last modified time: 09-04-2017\n */\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController } from 'ionic-angular';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription.js'\n\nimport { TodosService, ITodo } from '../../providers/todos-service/todos-service';\nimport { NotifMock } from '../../providers/notifications-service/notif-mock';\nimport { INotifItem } from \"../../providers/notifications-service/notif-model\"\n\n/**\n * Generated class for the Items page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage({\n  name: 'items'\n})\n@Component({\n  selector: 'page-items',\n  templateUrl: 'items.html',\n})\nexport class Items {\n\n  public todos:Observable<ITodo[]>;\n  private _timerSubscribe:Subscription\n\n  constructor(\n    public navCtrl: NavController,\n    public todoService: TodosService,\n    public notifMock: NotifMock\n  ) {\n    this.todos = this.todoService.todos; // subscribe to entire collection\n    this.todoService.loadAll()\n    // run Observable deadline watcher\n    this.watchDeadline()\n  }\n\n  /* Ionc Event */\n  ionViewWillUnload(){\n    // don't forget to unsubscribe() on ionViewWillUnload\n    if(this._timerSubscribe) this._timerSubscribe.unsubscribe();\n  }\n\n  /* Event Methode */\n  addTodo(todoInput:any):void {\n    //console.log('todoInput->',todoInput)\n    this.todoService.create(todoInput.value)\n    this.clearInput(todoInput);\n  }\n\n  toggleComplete(todo:ITodo):void {\n    todo.isComplete = !todo.isComplete;\n    this.todoService.update(todo)\n  }\n\n  deleteTodo(todo:ITodo):void {\n    //console.log('delete todo-> ', todo)\n    this.todoService.delete(todo._id)\n  }\n\n  navToEdit(todo:ITodo):void {\n    console.log(todo)\n    this.navCtrl.push('item-edit', {\n      id: todo._id,\n      todo: todo\n    })\n  }\n\n  /* Core Methode */\n  clearInput(todoInput:any):void{\n    todoInput.value = '';\n  }\n\n  watchDeadline(){\n    let todoWatcher:Array<any> = [];\n    let timer:Observable<number> = Observable.timer(2000,1000);\n\n    this._timerSubscribe = timer.subscribe((t:number) => {\n      this.todos.forEach((todos:ITodo[])=>{\n        // add all todos into the todoWatcher[]\n        todoWatcher = [...todos]\n      })\n      // map todoWatcher[] to find todo with coming deadline\n      todoWatcher.map((todo:any)=>{\n        // if todo.deadline is smaller or equal to current time\n        // && if todo is NOT already expired\n        // run isDeadline(todo) to display alert\n        if((todo.deadline <= Date.now()) && (todo.expire != true)){\n          return this.isDeadline(t, todo)\n        }\n      })\n    });\n  }\n\n  isDeadline(t:number, todo:ITodo){\n    console.info('isDeadline-> ', todo);\n    // update expire param\n    todo.expire = true;\n    // update todo data\n    this.todoService.update(todo)\n    //alert(`Expired: ${todo.description}`)\n\n    // Schedule a single notification with native plugin\n    // will run notification on mobile or simple alert in browser\n    // Magic ;-)\n    const newDate = new Date();\n    newDate.setMinutes(newDate.getMinutes() + 1);\n    this.notifMock.schedule(<INotifItem>{\n    //this.localNotifications.schedule(<INotifItem>{\n      id: 1,\n      text: todo.description,\n      //sound: isAndroid? 'file://sound.mp3': 'file://beep.caf',\n      data: { secret: 'toto' },\n      at: newDate\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/items/items.ts","/**\n * @Author: Nicolas Fazio <webmaster-fazio>\n * @Date:   08-04-2017\n * @Email:  contact@nicolasfazio.ch\n * @Last modified by:   webmaster-fazio\n * @Last modified time: 08-04-2017\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Generated class for the DateFormat pipe.\n *\n * See https://angular.io/docs/ts/latest/guide/pipes.html for more info on\n * Angular Pipes.\n */\n@Pipe({\n  name: 'dateFormat',\n})\nexport class DateFormatPipe implements PipeTransform {\n  /*\n    Takes a timestamp and return as 01/01/2017\n   */\n  transform(value:number, args:any) {\n    let date:Date = new Date(+value); // make sure it's a number\n    let year:string = date.getFullYear()+'';\n    let month:string = (1 + date.getMonth()).toString();\n    month = month.length > 1 ? month : '0' + month;\n    let day:string = date.getDate().toString();\n    day = day.length > 1 ? day : '0' + day;\n    return day + '/' + month + '/' + year;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/dateformat-pipe.ts","/**\n * @Author: Nicolas Fazio <webmaster-fazio>\n * @Date:   08-04-2017\n * @Email:  contact@nicolasfazio.ch\n * @Last modified by:   webmaster-fazio\n * @Last modified time: 08-04-2017\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Generated class for the DeadlinePipe pipe.\n *\n * See https://angular.io/docs/ts/latest/guide/pipes.html for more info on\n * Angular Pipes.\n */\n@Pipe({\n  name: 'deadline',\n})\nexport class DeadlinePipe implements PipeTransform {\n  transform(deadline: number): 'warning'|'danger'|'primary' {\n\n    if(+deadline <= this.addDays(3) && +deadline > Date.now()){\n      return 'warning'\n    }\n\n    if (+deadline <= Date.now()) {\n      return 'danger'\n    }\n\n    return 'primary'\n\n  }\n\n  addDays(days:number):number {\n      let result:Date = new Date();\n      result.setDate(result.getDate() + days);\n      return  result.getTime();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/deadline-pipe.ts","/**\n * @Author: Nicolas Fazio <webmaster-fazio>\n * @Date:   08-04-2017\n * @Email:  contact@nicolasfazio.ch\n * @Last modified by:   webmaster-fazio\n * @Last modified time: 08-04-2017\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Generated class for the SortDescPipe pipe.\n *\n * See https://angular.io/docs/ts/latest/guide/pipes.html for more info on\n * Angular Pipes.\n */\n@Pipe({\n  name: 'sortBy',\n  pure: false\n})\nexport class SortDescPipe implements PipeTransform {\n  /*\n    Takes an array and sort in alphabetically order\n   */\n  transform(value: Array<any>, property:string = \"name\", order:string = 'asc') {\n    if (order === 'desc') {\n          return value.sort((a, b)=>{\n              if(b[property] < a[property]) return -1;\n              if(b[property] > a[property]) return 1;\n              return 0;\n          }) ;\n    }\n    else {\n      return value.sort((a, b)=>{\n          if(b[property] > a[property]) return -1;\n          if(b[property] < a[property]) return 1;\n          return 0;\n      }) ;\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/sortdesc-pipe.ts"],"sourceRoot":""}